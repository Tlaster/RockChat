<paging:Activity
    x:Class="RockChat.UWP.Activities.ChatActivity"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:RockChat.UWP.Activities"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:paging="using:RockChat.Controls.Paging"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    xmlns:models="using:Rocket.Chat.Net.Models"
    xmlns:controls1="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:common="using:RockChat.UWP.Common"
    xmlns:controls2="using:RockChat.UWP.Controls"
    xmlns:masterDetailsView="using:RockChat.UWP.Controls.MasterDetailsView"
    xmlns:data="using:RockChat.Core.Collection.Data"
    xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:viewModels="using:RockChat.Core.ViewModels"
    xmlns:icon="using:Bug10.Icon"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    Name="ChatActivityRoot"
    mc:Ignorable="d">

    <paging:Activity.Resources>
        <common:WithHostConverter x:Key="WithHostConverter" x:Name="WithHostConverter" />
        <common:ActionMessageConverter x:Key="ActionMessageConverter"/>
        <DataTemplate x:Key="MarkdownTemplate" x:DataType="models:IMessage">
            <controls2:MarkdownTextBlockEx
                EmojiDatas="{Binding ElementName=ChatActivityRoot, Path=ViewModel.Emojis}"
                Message="{x:Bind Mode=OneWay}"
                Content="{x:Bind Text, Mode=OneWay}" />
        </DataTemplate>
        <DataTemplate x:Key="BlockMessageTemplate" x:DataType="models:MessageData">
            <RelativePanel Padding="4">
                <Rectangle x:Name="AvatarRect" Width="{ThemeResource AvatarSize}"
                           RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignTopWithPanel="True" />
                <controls:PersonPicture DisplayName="{x:Bind Name, Mode=OneWay}"
                                        ProfilePicture="{x:Bind Avatar, Mode=OneWay, Converter={StaticResource WithHostConverter}}"
                                        x:Name="Avatar" Width="{ThemeResource AvatarLiteSize}"
                                        Height="{ThemeResource AvatarLiteSize}"
                                        RelativePanel.AlignRightWith="AvatarRect"
                                        RelativePanel.AlignTopWithPanel="True" />
                <TextBlock x:Name="Name" Text="{x:Bind Name, Mode=OneWay}"
                           Margin="8,0,0,0"
                           RelativePanel.RightOf="Avatar"
                           RelativePanel.AlignTopWith="Avatar" />
                <TextBlock x:Name="Date"
                           Margin="8,0,0,0"
                           Text="{x:Bind common:XamlHelper.HumanizeDateTime(Time), Mode=OneWay}" Opacity="0.66"
                           RelativePanel.RightOf="Name" RelativePanel.AlignTopWithPanel="True" />
                <controls1:Expander RelativePanel.RightOf="Avatar" HorizontalAlignment="Stretch"
                                    HorizontalContentAlignment="Stretch" Background="Transparent"
                                    RelativePanel.Below="Name"
                                    Header="This message is blocked">
                    <StackPanel Orientation="Vertical">
                        <ContentPresenter Margin="8,0" Content="{x:Bind Mode=OneWay}" ContentTemplate="{StaticResource MarkdownTemplate}"/>
                        <ContentPresenter Content="{x:Bind Mode=OneWay}"
                                          ContentTemplate="{StaticResource AttachmentTemplate}" />
                    </StackPanel>
                </controls1:Expander>
            </RelativePanel>
        </DataTemplate>
        <DataTemplate x:Key="ActionMessageTemplate" x:DataType="models:MessageData">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Padding="4" VerticalAlignment="Center">
                <controls:PersonPicture
                    DisplayName="{x:Bind Name, Mode=OneWay}"
                    ProfilePicture="{x:Bind Avatar, Mode=OneWay, Converter={StaticResource WithHostConverter}}"
                    x:Name="Avatar" Width="{ThemeResource AvatarLiteSize}"
                    Height="{ThemeResource AvatarLiteSize}" />
                <TextBlock Margin="8,0,0,0" Text="{x:Bind Name, Mode=OneWay}" VerticalAlignment="Center"/>
                <TextBlock Margin="8,0,0,0" Text="{x:Bind Mode=OneWay, Converter={StaticResource ActionMessageConverter}}" VerticalAlignment="Center"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ThreadMessageTemplate" x:DataType="models:MessageData">
            <RelativePanel Padding="4" extensions:Mouse.Cursor="Hand">
                <ContentControl 
                    VerticalContentAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    Content="{x:Bind Mode=OneWay}" 
                    RelativePanel.AlignTopWithPanel="True"
                    RelativePanel.AlignRightWithPanel="True"
                    RelativePanel.AlignBottomWithPanel="True"
                    RelativePanel.AlignLeftWithPanel="True">
                    <ContentControl.ContentTemplateSelector>
                        <common:OptionalDataTemplateSelector VisibleType="models:MessageData" DataTemplate="{StaticResource EditBackgroundTemplate}"/>
                    </ContentControl.ContentTemplateSelector>
                </ContentControl>
                <Rectangle x:Name="AvatarRect" Width="{ThemeResource AvatarSize}"
                           RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignTopWithPanel="True" />
                <SymbolIcon Symbol="Message" RelativePanel.AlignTopWithPanel="True"
                            Name="ThreadMessageIcon"
                            Foreground="{ThemeResource HyperlinkForegroundThemeBrush}"
                            RelativePanel.AlignRightWith="AvatarRect" />
                <TextBlock x:Name="ThreadMessageText" TextTrimming="CharacterEllipsis"
                           MaxLines="1"
                           Margin="8,0"
                           Foreground="{ThemeResource HyperlinkForegroundThemeBrush}"
                           Text="{x:Bind common:XamlHelper.ThreadText(ThreadMessage), Mode=OneWay}"
                           RelativePanel.RightOf="ThreadMessageIcon"
                           RelativePanel.AlignTopWith="ThreadMessageIcon" />
                <controls:PersonPicture DisplayName="{x:Bind Name, Mode=OneWay}"
                                        ProfilePicture="{x:Bind Avatar, Mode=OneWay, Converter={StaticResource WithHostConverter}}"
                                        x:Name="Avatar" Width="{ThemeResource AvatarLiteSize}"
                                        Height="{ThemeResource AvatarLiteSize}"
                                        RelativePanel.AlignRightWith="AvatarRect"
                                        RelativePanel.Below="ThreadMessageText" />
                <ContentPresenter x:Name="Markdown" RelativePanel.RightOf="Avatar"
                                  RelativePanel.AlignTopWith="Avatar" 
                                  Margin="8,0" Content="{x:Bind Mode=OneWay}" ContentTemplate="{StaticResource MarkdownTemplate}"/>
                <ContentPresenter Content="{x:Bind Mode=OneWay}" ContentTemplate="{StaticResource AttachmentTemplate}"
                                  RelativePanel.Below="Markdown" RelativePanel.RightOf="Avatar" />
            </RelativePanel>
        </DataTemplate>
        <DataTemplate x:Key="ThreadMessageLiteTemplate" x:DataType="models:MessageData">
            <RelativePanel Padding="4">
                <ContentControl 
                    VerticalContentAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    Content="{x:Bind Mode=OneWay}" 
                    RelativePanel.AlignTopWithPanel="True"
                    RelativePanel.AlignRightWithPanel="True"
                    RelativePanel.AlignBottomWithPanel="True"
                    RelativePanel.AlignLeftWithPanel="True">
                    <ContentControl.ContentTemplateSelector>
                        <common:OptionalDataTemplateSelector VisibleType="models:MessageData" DataTemplate="{StaticResource EditBackgroundTemplate}"/>
                    </ContentControl.ContentTemplateSelector>
                </ContentControl>
                <Rectangle x:Name="AvatarRect" Width="{ThemeResource AvatarSize}"
                           RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignTopWithPanel="True" />
                <controls:PersonPicture DisplayName="{x:Bind Name, Mode=OneWay}"
                                        ProfilePicture="{x:Bind Avatar, Mode=OneWay, Converter={StaticResource WithHostConverter}}"
                                        x:Name="Avatar" Width="{ThemeResource AvatarLiteSize}"
                                        Height="{ThemeResource AvatarLiteSize}"
                                        RelativePanel.AlignRightWith="AvatarRect"
                                        RelativePanel.AlignTopWithPanel="True" />
                <ContentPresenter x:Name="Markdown" RelativePanel.RightOf="Avatar"
                                  RelativePanel.AlignTopWith="Avatar"
                                  Margin="8,0" Content="{x:Bind Mode=OneWay}"
                                  ContentTemplate="{StaticResource MarkdownTemplate}"/>
                <ContentPresenter Content="{x:Bind Mode=OneWay}" ContentTemplate="{StaticResource AttachmentTemplate}"
                                  RelativePanel.Below="Markdown" RelativePanel.RightOf="Avatar" />
            </RelativePanel>
        </DataTemplate>
        <DataTemplate x:Key="LiteMessageTemplate" x:DataType="models:MessageData">
            <RelativePanel Padding="4,0">
                <RelativePanel.ContextFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="Reply">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Comment"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="Reaction">
                            <MenuFlyoutItem.Icon>
                                <icon:IconView Icon="Emoji"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="Quote">
                            <MenuFlyoutItem.Icon>
                                <icon:IconView Icon="LeftDoubleQuote"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="Edit">
                            <MenuFlyoutItem.Icon>
                                <icon:IconView Icon="Edit"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="Info">
                            <MenuFlyoutItem.Icon>
                                <icon:IconView Icon="Info"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutSeparator/>
                        <MenuFlyoutItem Text="Delete" Foreground="Red">
                            <MenuFlyoutItem.Icon>
                                <icon:IconView Foreground="Red" Icon="Delete"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="Report" Foreground="Red">
                            <MenuFlyoutItem.Icon>
                                <icon:IconView Foreground="Red" Icon="ReportHacked"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                    </MenuFlyout>
                </RelativePanel.ContextFlyout>
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="PointerEntered" SourceObject="{Binding ElementName=MessageRootPanel}">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=HoverButtons}" PropertyName="Visibility" Value="Visible"/>
                        <core:GoToStateAction StateName="HoverButtonsShown" TargetObject="{Binding ElementName=MessageRootPanel}"/>
                    </core:EventTriggerBehavior>
                    <core:EventTriggerBehavior EventName="PointerExited" SourceObject="{Binding ElementName=MessageRootPanel}">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=HoverButtons}" PropertyName="Visibility" Value="Collapsed"/>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                <ContentControl 
                    VerticalContentAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    Content="{x:Bind Mode=OneWay}" 
                    RelativePanel.AlignTopWithPanel="True"
                    RelativePanel.AlignRightWithPanel="True"
                    RelativePanel.AlignBottomWithPanel="True"
                    RelativePanel.AlignLeftWithPanel="True">
                    <ContentControl.ContentTemplateSelector>
                        <common:OptionalDataTemplateSelector VisibleType="models:MessageData" DataTemplate="{StaticResource EditBackgroundTemplate}"/>
                    </ContentControl.ContentTemplateSelector>
                </ContentControl>
                <StackPanel 
                    x:Name="HoverButtons" Orientation="Horizontal" RelativePanel.AlignTopWithPanel="True"
                    Visibility="Collapsed" RelativePanel.AlignRightWithPanel="True">
                    <Button Style="{StaticResource TextBlockButtonStyle}">
                        <icon:IconView FontSize="14" Icon="Comment"/>
                    </Button>
                    <Button Style="{StaticResource TextBlockButtonStyle}">
                        <icon:IconView FontSize="14" Icon="Emoji"/>
                    </Button>
                    <Button Style="{StaticResource TextBlockButtonStyle}">
                        <icon:IconView FontSize="14" Icon="More"/>
                    </Button>
                </StackPanel>
                <Rectangle x:Name="Avatar" Width="{ThemeResource AvatarSize}"
                           RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignTopWithPanel="True" />
                <ContentPresenter x:Name="Markdown" RelativePanel.RightOf="Avatar"
                                  RelativePanel.AlignTopWithPanel="True"
                                  Margin="8,0" Content="{x:Bind Mode=OneWay}"
                                  ContentTemplate="{StaticResource MarkdownTemplate}"/>
                <ContentPresenter Content="{x:Bind Mode=OneWay}" ContentTemplate="{StaticResource AttachmentTemplate}"
                                  RelativePanel.Below="Markdown" RelativePanel.RightOf="Avatar" />
            </RelativePanel>
        </DataTemplate>
        <DataTemplate x:Key="MessageTemplate" x:DataType="models:IMessage">
            <RelativePanel Padding="4" Background="Transparent" Name="MessageRootPanel">
                <RelativePanel.ContextFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="Reply" Tag="{x:Bind Mode=OneWay}" Click="Comment_Click">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Comment"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="Reaction">
                            <MenuFlyoutItem.Icon>
                                <icon:IconView Icon="Emoji"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="Quote">
                            <MenuFlyoutItem.Icon>
                                <icon:IconView Icon="RightDoubleQuote"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="Edit">
                            <MenuFlyoutItem.Icon>
                                <icon:IconView Icon="Edit"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="Info">
                            <MenuFlyoutItem.Icon>
                                <icon:IconView Icon="Info"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutSeparator/>
                        <MenuFlyoutItem Text="Delete" Foreground="Red">
                            <MenuFlyoutItem.Icon>
                                <icon:IconView Foreground="Red" Icon="Delete"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                    </MenuFlyout>
                </RelativePanel.ContextFlyout>
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="PointerEntered" SourceObject="{Binding ElementName=MessageRootPanel}">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=HoverButtons}" PropertyName="Visibility" Value="Visible"/>
                        <core:GoToStateAction StateName="HoverButtonsShown" TargetObject="{Binding ElementName=MessageRootPanel}"/>
                    </core:EventTriggerBehavior>
                    <core:EventTriggerBehavior EventName="PointerExited" SourceObject="{Binding ElementName=MessageRootPanel}">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=HoverButtons}" PropertyName="Visibility" Value="Collapsed"/>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                <ContentControl 
                    VerticalContentAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    Content="{x:Bind Mode=OneWay}" 
                    RelativePanel.AlignTopWithPanel="True"
                    RelativePanel.AlignRightWithPanel="True"
                    RelativePanel.AlignBottomWithPanel="True"
                    RelativePanel.AlignLeftWithPanel="True">
                    <ContentControl.ContentTemplateSelector>
                        <common:OptionalDataTemplateSelector VisibleType="models:MessageData" DataTemplate="{StaticResource EditBackgroundTemplate}"/>
                    </ContentControl.ContentTemplateSelector>
                </ContentControl>
                <StackPanel 
                    x:Name="HoverButtons" Orientation="Horizontal" RelativePanel.AlignTopWithPanel="True"
                    Visibility="Collapsed" RelativePanel.AlignRightWithPanel="True">
                    <Button Style="{StaticResource TextBlockButtonStyle}" Tag="{x:Bind Mode=OneWay}" Click="Comment_Click">
                        <icon:IconView FontSize="14" Icon="Comment"/>
                    </Button>
                    <Button Style="{StaticResource TextBlockButtonStyle}">
                        <icon:IconView FontSize="14" Icon="Emoji"/>
                    </Button>
                    <Button Style="{StaticResource TextBlockButtonStyle}">
                        <icon:IconView FontSize="14" Icon="More"/>
                    </Button>
                </StackPanel>
                <controls:PersonPicture DisplayName="{x:Bind Name, Mode=OneWay}"
                                        ProfilePicture="{x:Bind Avatar, Mode=OneWay, Converter={StaticResource WithHostConverter}}"
                                        x:Name="Avatar" Width="{ThemeResource AvatarSize}"
                                        Height="{ThemeResource AvatarSize}"
                                        RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignTopWithPanel="True" />

                <TextBlock x:Name="Name" Text="{x:Bind Name, Mode=OneWay}"
                           Margin="8,0,0,0"
                           RelativePanel.RightOf="Avatar"
                           RelativePanel.AlignTopWithPanel="True" />
                <TextBlock x:Name="Date"
                           Margin="8,0,0,0"
                           Text="{x:Bind common:XamlHelper.HumanizeDateTime(Time), Mode=OneWay}" Opacity="0.66"
                           RelativePanel.RightOf="Name" RelativePanel.AlignTopWithPanel="True" />
                <ContentPresenter x:Name="Markdown" RelativePanel.RightOf="Avatar"
                                  RelativePanel.Below="Name"
                                  Margin="8,0" Content="{x:Bind Mode=OneWay}"
                                  ContentTemplate="{StaticResource MarkdownTemplate}"/>
                <ContentPresenter Content="{x:Bind Mode=OneWay}" ContentTemplate="{StaticResource AttachmentTemplate}"
                                  Name="Attachment"
                                  RelativePanel.Below="Markdown" RelativePanel.RightOf="Avatar" />
                <ContentControl Margin="8,0" Content="{x:Bind Mode=OneWay}" RelativePanel.Below="Attachment" RelativePanel.RightOf="Avatar">
                    <ContentControl.ContentTemplateSelector>
                        <common:OptionalDataTemplateSelector VisibleType="models:MessageData" DataTemplate="{StaticResource AttitudeTemplate}"/>
                    </ContentControl.ContentTemplateSelector>
                </ContentControl>
            </RelativePanel>
        </DataTemplate>

        <DataTemplate x:Key="AttitudeTemplate" x:DataType="models:MessageData">
            <ItemsControl
                ItemsSource="{x:Bind Reactions, Mode=OneWay}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <controls1:WrapPanel VerticalSpacing="4"
                                            HorizontalSpacing="4" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button>
                            <StackPanel Orientation="Horizontal">
                                <controls2:EmojiView Height="{Binding ElementName=ReactionCount, Path=ActualHeight}" Width="{Binding ElementName=ReactionCount, Path=ActualHeight}"
                                                     EmojiDatas="{Binding ElementName=ChatActivityRoot, Path=ViewModel.Emojis}" Emoji="{Binding Key}"/>
                                <TextBlock Margin="4,0,0,0" Text="{Binding Value.Usernames.Count}" Name="ReactionCount"/>
                            </StackPanel>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </DataTemplate>
        <DataTemplate x:DataType="models:MessageData" x:Key="EditBackgroundTemplate">
            <Rectangle 
                Margin="-16,-4"
                Visibility="{x:Bind IsSelected, Mode=OneWay}"
                Fill="{ThemeResource EditingBackground}"
                RelativePanel.AlignTopWithPanel="True"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.AlignBottomWithPanel="True"
                RelativePanel.AlignLeftWithPanel="True"/>
        </DataTemplate>

        <DataTemplate x:DataType="models:IMessage" x:Key="AttachmentTemplate">
            <ItemsControl Visibility="{x:Bind common:XamlHelper.IsNotNullToVisibility(Attachments), Mode=OneWay}"
                          Margin="8"
                          ItemsSource="{x:Bind Attachments, Mode=OneWay}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <common:NineGridPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplateSelector>
                    <common:AttachmentDataTemplateSelector MessageTemplate="{StaticResource MessageTemplate}">
                        <common:AttachmentDataTemplateSelector.ImageTemplate>
                            <DataTemplate x:DataType="models:Attachment">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <HyperlinkButton Content="{x:Bind Title}"
                                                     Margin="4"
                                                     NavigateUri="{x:Bind TitleLink, Converter={StaticResource WithHostConverter}}" />
                                    <controls1:ImageEx
                                        Tag="{x:Bind}"
                                        IsCacheEnabled="True"
                                        Tapped="ImageEx_Tapped"
                                        Grid.Row="1"
                                        Source="{x:Bind ImageUrl, Converter={StaticResource WithHostConverter}}" />
                                    <TextBlock Grid.Row="2" Margin="4" Text="{x:Bind Description}"
                                               Visibility="{x:Bind common:XamlHelper.IsNotEmptyToVisibility(Description)}" />
                                </Grid>
                            </DataTemplate>
                        </common:AttachmentDataTemplateSelector.ImageTemplate>
                        <common:AttachmentDataTemplateSelector.VideoTemplate>
                            <DataTemplate x:DataType="models:Attachment">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <HyperlinkButton Content="{x:Bind Title}"
                                                     Margin="4"
                                                     NavigateUri="{x:Bind TitleLink, Converter={StaticResource WithHostConverter}}" />
                                    <MediaElement
                                        Grid.Row="1"
                                        Source="{x:Bind VideoUrl, Converter={StaticResource WithHostConverter}}"
                                        AreTransportControlsEnabled="True" />
                                    <TextBlock Grid.Row="2" Margin="4" Text="{x:Bind Description}"
                                               Visibility="{x:Bind common:XamlHelper.IsNotEmptyToVisibility(Description)}" />
                                </Grid>
                            </DataTemplate>
                        </common:AttachmentDataTemplateSelector.VideoTemplate>
                        <common:AttachmentDataTemplateSelector.FileTemplate>
                            <DataTemplate x:DataType="models:Attachment">
                                <HyperlinkButton Content="{x:Bind Title}"
                                                 NavigateUri="{x:Bind TitleLink, Converter={StaticResource WithHostConverter}}" />
                            </DataTemplate>
                        </common:AttachmentDataTemplateSelector.FileTemplate>
                        <common:AttachmentDataTemplateSelector.DefaultTemplate>
                            <DataTemplate x:DataType="models:Attachment">
                                <HyperlinkButton Content="{x:Bind Title}"
                                                 NavigateUri="{x:Bind TitleLink, Converter={StaticResource WithHostConverter}}" />
                            </DataTemplate>
                        </common:AttachmentDataTemplateSelector.DefaultTemplate>
                        <common:AttachmentDataTemplateSelector.TextTemplate>
                            <DataTemplate x:DataType="models:Attachment">
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Text="{x:Bind Title, Mode=OneWay}"/>
                                    <ContentPresenter Content="{x:Bind Mode=OneWay}" ContentTemplate="{StaticResource MarkdownTemplate}"/>
                                </StackPanel>
                            </DataTemplate>
                        </common:AttachmentDataTemplateSelector.TextTemplate>
                    </common:AttachmentDataTemplateSelector>
                </ItemsControl.ItemTemplateSelector>
            </ItemsControl>
        </DataTemplate>


        <DataTemplate x:DataType="viewModels:ThreadMessageViewModel" x:Key="RoomThreadChatTemplate"
                      x:Name="RoomThreadChatTemplate">
            <Grid AllowDrop="True" Drop="RoomOnDrop" DragOver="RoomOnDragOver" Tag="{x:Bind Mode=OneWay}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <controls:ProgressBar Grid.Row="1" VerticalAlignment="Bottom"
                                      IsIndeterminate="{x:Bind IsLoading, Mode=OneWay}"
                                      Background="Transparent" />
                <controls2:ChatListView Grid.Row="1" ItemsSource="{x:Bind Message, Mode=OneWay}"
                                        ExtraData="{x:Bind Room}"
                                        IsItemClickEnabled="True"
                                        SelectionMode="None" IncrementalLoadingThreshold="0.3">
                    <controls2:ChatListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="MinHeight" Value="0" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </controls2:ChatListView.ItemContainerStyle>
                    <controls2:ChatListView.ItemTemplateSelector>
                        <common:MessageTemplateSelector
                            IsInThread="True"
                            MessageTemplate="{StaticResource MessageTemplate}"
                            LiteMessageTemplate="{StaticResource LiteMessageTemplate}"
                            ActionMessageTemplate="{StaticResource ActionMessageTemplate}"
                            ThreadMessageTemplate="{StaticResource ThreadMessageTemplate}"
                            BlockMessageTemplate="{StaticResource BlockMessageTemplate}"
                            ThreadMessageLiteTemplate="{StaticResource ThreadMessageLiteTemplate}" />
                    </controls2:ChatListView.ItemTemplateSelector>
                    <controls2:ChatListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel VerticalAlignment="Top"
                                             ItemsUpdatingScrollMode="KeepLastItemInView" />
                        </ItemsPanelTemplate>
                    </controls2:ChatListView.ItemsPanel>
                </controls2:ChatListView>
                <Grid Grid.Row="2" Padding="16"
                      Visibility="{x:Bind common:XamlHelper.InvertBoolToVisibility(Room.RoomsResult.ReadOnly), Mode=OneWay}">
                    <UserControl>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EditingGroup">
                                <VisualState x:Name="Normal">

                                </VisualState>
                                <VisualState x:Name="Editing">
                                    <VisualState.Setters>
                                        <Setter Target="ThreadChatBox.Background" Value="{ThemeResource EditingBackground}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <controls2:ChatBox
                            Name="ThreadChatBox"
                            Loaded="ThreadChatBox_Loaded"
                            DataContextChanged="ThreadChatBox_DataContextChanged"
                            UploadFile="ChatBox_UploadFile" Commit="ThreadMessage_Commit"
                            DataContext="{x:Bind Mode=OneWay}"
                            Style="{ThemeResource DefaultTextBoxStyle}">
                        </controls2:ChatBox>
                    </UserControl>
                </Grid>
            </Grid>
        </DataTemplate>

        <DataTemplate x:DataType="models:RoomModel" x:Key="RoomChatTemplate">
            <Grid AllowDrop="True" Drop="RoomOnDrop" DragOver="RoomOnDragOver" Tag="{x:Bind Mode=OneWay}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid Padding="4"
                      Background="{ThemeResource SystemControlAcrylicWindowBrush}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <controls:PersonPicture DisplayName="{x:Bind Name, Mode=OneWay}"
                                            ProfilePicture="{x:Bind Avatar, Mode=OneWay}"
                                            Grid.RowSpan="2" Margin="8"
                                            Height="{ThemeResource AvatarSize}"
                                            Width="{ThemeResource AvatarSize}" />
                    <TextBlock VerticalAlignment="Center" Grid.Row="0" Grid.Column="1"
                               Text="{x:Bind Name, Mode=OneWay}" />
                    <TextBlock FontSize="12" Opacity="0.66" Grid.Row="1" Grid.Column="1"
                               Text="{x:Bind RoomsResult.Topic, Mode=OneWay}" />
                </Grid>
                <controls:ProgressBar Grid.Row="1" VerticalAlignment="Top"
                                      IsIndeterminate="{Binding Messages.IsLoading}"
                                      Background="Transparent" />
                <controls2:ChatListView Grid.Row="1" ItemsSource="{x:Bind Messages, Mode=OneWay}"
                                        ExtraData="{x:Bind}"
                                        IsItemClickEnabled="True"
                                        ItemClick="ChatListView_ItemClick"
                                        SelectionMode="None" IncrementalLoadingThreshold="0.3">
                    <controls2:ChatListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="MinHeight" Value="0" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </controls2:ChatListView.ItemContainerStyle>
                    <controls2:ChatListView.ItemTemplateSelector>
                        <common:MessageTemplateSelector MessageTemplate="{StaticResource MessageTemplate}"
                                                        LiteMessageTemplate="{StaticResource LiteMessageTemplate}"
                                                        ActionMessageTemplate="{StaticResource ActionMessageTemplate}"
                                                        ThreadMessageTemplate="{StaticResource ThreadMessageTemplate}"
                                                        BlockMessageTemplate="{StaticResource BlockMessageTemplate}"
                                                        ThreadMessageLiteTemplate="{StaticResource ThreadMessageLiteTemplate}" />
                    </controls2:ChatListView.ItemTemplateSelector>
                    <controls2:ChatListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel VerticalAlignment="Top"
                                             ItemsUpdatingScrollMode="KeepLastItemInView" />
                        </ItemsPanelTemplate>
                    </controls2:ChatListView.ItemsPanel>
                </controls2:ChatListView>
                <Grid Grid.Row="2" Padding="16"
                      Visibility="{x:Bind common:XamlHelper.InvertBoolToVisibility(RoomsResult.ReadOnly), Mode=OneWay}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal"
                                Visibility="{x:Bind common:XamlHelper.IsNotZeroToVisibility(Typing.Count), Mode=OneWay}">
                        <TextBlock Text="Typing:"/>
                        <ItemsControl
                            ItemsSource="{x:Bind Typing}" >
                            <ItemsControl.ItemTemplate>
                                <DataTemplate x:DataType="x:String">
                                    <TextBlock Margin="4,0" Text="{x:Bind}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                    <UserControl
                        Grid.Row="1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EditingGroup">
                                <VisualState x:Name="Normal">

                                </VisualState>
                                <VisualState x:Name="Editing">
                                    <VisualState.Setters>
                                        <Setter Target="MessageChatBox.Background" Value="{ThemeResource EditingBackground}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <controls2:ChatBox 
                            x:Name="MessageChatBox"
                            DataContextChanged="ChatBox_DataContextChanged"
                            Loaded="ChatBox_Loaded"
                            UploadFile="ChatBox_UploadFile" Commit="ChatBox_Commit"
                            DataContext="{x:Bind Mode=OneWay}"
                            Style="{ThemeResource DefaultTextBoxStyle}" >
                        </controls2:ChatBox>
                    </UserControl>
                </Grid>
            </Grid>
        </DataTemplate>
    </paging:Activity.Resources>

    <Grid>
        <SplitView DisplayMode="Overlay" x:Name="ExtraPane" PaneClosed="ExtraPane_PaneClosed" OpenPaneLength="400"
                   PanePlacement="Right">
            <SplitView.Pane>
                <Grid>
                    <ContentPresenter x:Name="PaneContent" />
                </Grid>
            </SplitView.Pane>
            <masterDetailsView:MasterDetailsView ItemsSource="{x:Bind AdvancedCollectionView, Mode=OneWay}"
                                                 MasterPaneBackground="{ThemeResource SystemControlAcrylicWindowBrush}"
                                                 SelectionChanged="MasterDetailsView_SelectionChanged"
                                                 DetailsTemplate="{StaticResource RoomChatTemplate}"
                                                 x:Name="ChatMasterDetailView">
                <masterDetailsView:MasterDetailsView.ItemTemplate>
                    <DataTemplate x:DataType="models:RoomModel">
                        <Grid ToolTipService.ToolTip="{x:Bind Name, Mode=OneWay}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <controls:PersonPicture DisplayName="{x:Bind Name, Mode=OneWay}"
                                                    ProfilePicture="{x:Bind Avatar, Mode=OneWay}"
                                                    Grid.RowSpan="2" Margin="0,8,8,8"
                                                    Height="{ThemeResource AvatarSize}"
                                                    Width="{ThemeResource AvatarSize}" />
                            <TextBlock VerticalAlignment="Center" Grid.Row="0" Grid.Column="1"
                                       MaxLines="1" TextTrimming="CharacterEllipsis"
                                       FontWeight="{x:Bind common:XamlHelper.AlertFontStyle(SubscriptionResult), Mode=OneWay}"
                                       Text="{x:Bind Name, Mode=OneWay}" />
                            <TextBlock FontSize="12" Opacity="0.66" Grid.Row="1" MaxLines="1"
                                       TextTrimming="CharacterEllipsis" Grid.Column="1"
                                       FontWeight="{x:Bind common:XamlHelper.AlertFontStyle(SubscriptionResult), Mode=OneWay}"
                                       Text="{x:Bind RoomsResult.LastMessage.Msg, Mode=OneWay}" />
                        </Grid>
                    </DataTemplate>
                </masterDetailsView:MasterDetailsView.ItemTemplate>
                <masterDetailsView:MasterDetailsView.NoSelectionContent>
                    <Grid />
                </masterDetailsView:MasterDetailsView.NoSelectionContent>
            </masterDetailsView:MasterDetailsView>
        </SplitView>
        <controls:TeachingTip x:Name="CommentTeachingTip"
                              Closed="CommentTeachingTip_Closed">
        </controls:TeachingTip>
        <controls:ProgressBar IsIndeterminate="{x:Bind ViewModel.IsLoading, Mode=OneWay}" HorizontalAlignment="Stretch"
                     Background="Transparent"
                     VerticalAlignment="Top"
                     Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
        <Grid VerticalAlignment="Top" Visibility="{x:Bind ViewModel.IsOffline, Mode=OneWay}">
            <Rectangle Fill="{ThemeResource EditingBackground}"/>
            <TextBlock Text="Reconnecting..." Margin="8" HorizontalAlignment="Center" Style="{ThemeResource TitleTextBlockStyle}"/>
            <animations:Implicit.ShowAnimations>
                <animations:OpacityAnimation From="0" To="1" Duration="0:0:0.3" />
                <animations:TranslationAnimation From="0, -40, 0" To="0" Duration="0:0:0.3" />
            </animations:Implicit.ShowAnimations>
            <animations:Implicit.HideAnimations>
                <animations:OpacityAnimation To="0" From="1" Duration="0:0:0.2" />
                <animations:TranslationAnimation To="0, -40, 0" From="0" Duration="0:0:0.2" />
            </animations:Implicit.HideAnimations>
        </Grid>
    </Grid>
</paging:Activity>